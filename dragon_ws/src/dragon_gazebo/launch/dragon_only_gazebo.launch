<?xml version="1.0"?>
<launch> 
  <include file="$(find gazebo_ros)/launch/empty_world.launch">  
    <arg name="world_name" value="worlds/empty.world"/>  
    <arg name="paused" value="true"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>
  
  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"  command="$(find xacro)/xacro.py '$(find dragon_description)/urdf/dragon.urdf'" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="-urdf -model dragon -param robot_description"/>
  

  <!-- Robot state publisher 
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="50.0" />
    <param name="tf_prefix" type="string" value="" />
  </node>
-->
  <!-- Fake Calibration 
  <node pkg="rostopic" type="rostopic" name="fake_joint_calibration"
        args="pub /calibrated std_msgs/Bool true" />  -->
  
  <!-- joint_state_controller
  <rosparam file="$(find dragon_gazebo)/controller/joint_state_controller.yaml" command="load"/>
  <node name="joint_state_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn joint_state_controller" respawn="false" output="screen"/>
  

  <rosparam file="$(find dragon_gazebo)/controller/leg_controller_dragon.yaml" command="load"/>
  <node name="group_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn lf_group_controller rf_group_controller lb_group_controller rb_group_controller " respawn="false" output="screen"/>  
  -->
 
</launch>
